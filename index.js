import {
  Blockfrost,
  Data,
  fromHex,
  fromLabel,
  fromText,
  Lucid,
} from "lucid-cardano";
const cbor =
  "";

const lucid = await Lucid.new(
  new Blockfrost(
    "https://cardano-preprod.blockfrost.io/api/v0",
    "preprodaObP3ncIxrfcxDhiWCDVYdsV6974tS4z"
  ),
  "Preprod"
);

// console.log(lucid);

const hgeScript = {
  type: "PlutusV2",
  script: cbor,
};

// console.log(hgeScript);

// const scriptAddress = lucid.utils.validatorToAddress(hgeScript);

// console.log(`HGE Address: ${scriptAddress}`);
// // addr_test1wq2dm9mj94kgw0tt6px5u076lgnm6c8439kegmy5kvtvr3sqy8jgw;

// const seed =
//   "nest wink neither undo oven labor nature olympic file mandate glass inner cart theme initial fancy glow water mutual flame swap budget reform cute";

// const adminSeed = seed;
// lucid.selectWalletFromSeed(adminSeed);

// // console.log(wallet);

// const { paymentCredential } = lucid.utils.getAddressDetails(
//   await lucid.wallet.address()
// );
// const adminPKH = paymentCredential?.hash;

// console.log("paymentCredentials ", paymentCredential);

// console.log("adminPKH ", adminPKH);

// const amount = 100000000n;
// const tx = await lucid
//   .newTx()
//   .payToAddress(scriptAddress, { lovelace: 5000000n })
//   .payToAddress(scriptAddress, {
//     ["329d7fd2c76bd18b80f2359968b99dcb44786ad56e98e108325f8026" +
//     fromText("SOLANKII!")]: 10000n,
//   })
//   .complete();
// const signedTx = await tx.sign().complete();
// const txHash = await signedTx.submit();
// console.log(`Transaction submitted: ${txHash}`);

const datum = Data.from(cbor);

console.log(datum);
